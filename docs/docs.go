// Package docs Code generated by swaggo/swag. DO NOT EDIT
package docs

import "github.com/swaggo/swag"

const docTemplate = `{
    "schemes": {{ marshal .Schemes }},
    "swagger": "2.0",
    "info": {
        "description": "{{escape .Description}}",
        "title": "{{.Title}}",
        "contact": {},
        "version": "{{.Version}}"
    },
    "host": "{{.Host}}",
    "basePath": "{{.BasePath}}",
    "paths": {
        "/neverhaveiever/description": {
            "get": {
                "description": "get description",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "neverhaveiever"
                ],
                "summary": "Description of game",
                "responses": {
                    "200": {
                        "description": "desc",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/httptools.JsonSuccessResponse"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "result": {
                                            "type": "string"
                                        }
                                    }
                                }
                            ]
                        }
                    }
                }
            }
        },
        "/neverhaveiever/topic/list": {
            "get": {
                "description": "get topic list",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "neverhaveiever"
                ],
                "summary": "Topic list",
                "responses": {
                    "200": {
                        "description": "desc",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/httptools.JsonSuccessResponse"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "result": {
                                            "type": "array",
                                            "items": {
                                                "type": "string"
                                            }
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/httptools.JsonErrorResponse"
                        }
                    }
                }
            }
        },
        "/neverhaveiever/topic/records": {
            "post": {
                "description": "get records by topic",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "neverhaveiever"
                ],
                "summary": "Records",
                "parameters": [
                    {
                        "description": "query params",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/neverhaveiever.TopicRecordsRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "desc",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/httptools.JsonSuccessResponse"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "result": {
                                            "$ref": "#/definitions/neverhaveiever.TopicRecordsResponse"
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/httptools.JsonErrorResponse"
                        }
                    }
                }
            }
        }
    },
    "definitions": {
        "httptools.JsonErrorResponse": {
            "type": "object",
            "properties": {
                "error": {
                    "type": "string"
                }
            }
        },
        "httptools.JsonSuccessResponse": {
            "type": "object",
            "properties": {
                "result": {}
            }
        },
        "neverhaveiever.TopicRecordsRequest": {
            "type": "object",
            "properties": {
                "page": {
                    "type": "integer",
                    "example": 1
                },
                "page_size": {
                    "type": "integer"
                },
                "refresh": {
                    "type": "boolean"
                },
                "topics": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "example": [
                        "all"
                    ]
                }
            }
        },
        "neverhaveiever.TopicRecordsResponse": {
            "type": "object",
            "properties": {
                "count_page": {
                    "type": "integer"
                },
                "records": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                }
            }
        }
    }
}`

// SwaggerInfo holds exported Swagger Info so clients can modify it
var SwaggerInfo = &swag.Spec{
	Version:          "1.0",
	Host:             "localhost:8080",
	BasePath:         "",
	Schemes:          []string{},
	Title:            "Party games API",
	Description:      "",
	InfoInstanceName: "swagger",
	SwaggerTemplate:  docTemplate,
	LeftDelim:        "{{",
	RightDelim:       "}}",
}

func init() {
	swag.Register(SwaggerInfo.InstanceName(), SwaggerInfo)
}
